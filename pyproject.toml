[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>=42", # At least v42 of setuptools required.
  "versioningit",
]

[project]
name = "supertask"
description = "Supertask, a convenience job scheduler"
readme = "README.md"
keywords = [
  "apscheduler",
  "cron",
  "interval",
  "jobs",
  "scheduler",
  "scheduling",
  "tasks",
  "toolkit",
]
license = { text = "AGPL 3, EUPL 1.2" }
authors = [
  { name = "Walter Behmann", email = "walter@crate.io" },
  { name = "Andreas Motl", email = "andreas.motl@crate.io" },
]
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Environment :: Console",
  "Intended Audience :: Customer Service",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: End Users/Desktop",
  "Intended Audience :: Information Technology",
  "Intended Audience :: Manufacturing",
  "Intended Audience :: Science/Research",
  "Intended Audience :: System Administrators",
  "Intended Audience :: Telecommunications Industry",
  "License :: OSI Approved :: European Union Public Licence 1.2 (EUPL 1.2)",
  "License :: OSI Approved :: GNU Affero General Public License v3",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX :: Linux",
  "Operating System :: Unix",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Adaptive Technologies",
  "Topic :: Communications",
  "Topic :: Database",
  "Topic :: Documentation",
  "Topic :: Education",
  "Topic :: Internet",
  "Topic :: Internet :: WWW/HTTP",
  "Topic :: Office/Business",
  "Topic :: Scientific/Engineering",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Pre-processors",
  "Topic :: Software Development :: Quality Assurance",
  "Topic :: Software Development :: Testing",
  "Topic :: Software Development :: Version Control",
  "Topic :: System :: Archiving",
  "Topic :: System :: Benchmark",
  "Topic :: System :: Clustering",
  "Topic :: System :: Distributed Computing",
  "Topic :: System :: Logging",
  "Topic :: System :: Monitoring",
  "Topic :: System :: Networking",
  "Topic :: System :: Systems Administration",
  "Topic :: Text Processing",
  "Topic :: Utilities",
]
dynamic = [
  "version",
]
dependencies = [
  "apscheduler<4",
  "click<9",
  "colorama<0.5",
  "colorlog<7",
  "fastapi<0.116",
  "halo<0.1",
  "icecream<3",
  "jinja2<4",
  "markupsafe<4",
  "pueblo[fileio]",
  "pydantic<3",
  "python-dotenv[cli]<2",
  "python-multipart==0.0.19",
  "pytz",
  "sqlalchemy-cratedb==0.40.0",
  "uvicorn<0.33",
  "watchdog<7",
]
optional-dependencies.develop = [
  "black<25",
  "mypy<1.14",
  "poethepoet<0.32",
  "pyproject-fmt<2.6",
  "ruff<0.8",
  "validate-pyproject<0.23",
]
optional-dependencies.release = [
  "build<2",
  "twine<7",
]
optional-dependencies.test = [
  "cratedb-toolkit==0.0.29",
  "httpx<0.28",
  "psycopg2-binary<3",
  "pytest<9",
  "pytest-cov<7",
  "pytest-mock<4",
]
urls.changelog = "https://github.com/pyveci/supertask/blob/main/CHANGES.md"
urls.documentation = "https://github.com/pyveci/supertask"
urls.homepage = "https://github.com/pyveci/supertask"
urls.repository = "https://github.com/pyveci/supertask"
scripts.st = "supertask.cli:cli"
scripts.supertask = "supertask.cli:cli"

[tool.setuptools]
packages = [ "supertask" ]

[tool.black]
line-length = 120

[tool.ruff]
line-length = 120

extend-exclude = [
]

lint.select = [
  # Builtins
  "A",
  # Bugbear
  "B",
  # comprehensions
  "C4",
  # Pycodestyle
  "E",
  # eradicate
  "ERA",
  # Pyflakes
  "F",
  # isort
  "I",
  # pandas-vet
  "PD",
  # return
  "RET",
  # Bandit
  "S",
  # print
  "T20",
  "W",
  # flake8-2020
  "YTT",
]

lint.extend-ignore = [
  # zip() without an explicit strict= parameter
  "B905",
  # df is a bad variable name. Be kinder to your future self.
  "PD901",
  # Unnecessary variable assignment before `return` statement
  "RET504",
  # Unnecessary `elif` after `return` statement
  "RET505",
  # Probable insecure usage of temporary file or directory
  "S108",
]

lint.per-file-ignores."examples/*" = [ "T201" ] # Allow `print`
lint.per-file-ignores."test_*.py" = [ "S101" ]  # Allow use of `assert`, and `print`.
lint.per-file-ignores."tests/*" = [ "S101" ]    # Allow use of `assert`, and `print`.

[tool.pytest.ini_options]
addopts = """
  -rfEXs -p pytester --strict-markers --verbosity=3
  --cov --cov-report=term-missing --cov-report=xml
  """
minversion = "2.0"
log_level = "DEBUG"
log_cli_level = "DEBUG"
log_format = "%(asctime)-15s [%(name)-36s] %(levelname)-8s: %(message)s"
testpaths = [
  "tests",
]
xfail_strict = true
markers = [
]

[tool.coverage.run]
branch = false
omit = [
  "tests/*",
  "test_*.py",
]
source = [ "supertask" ]

[tool.coverage.report]
fail_under = 0
show_missing = true

[tool.mypy]
packages = [ "supertask" ]
exclude = [  ]
check_untyped_defs = true
ignore_missing_imports = true
implicit_optional = true
install_types = true
non_interactive = true

[tool.versioningit.vcs]
method = "git"
default-tag = "0.0.0"

# ===================
# Tasks configuration
# ===================

[tool.poe.tasks]

check = [
  "lint",
  "test",
]

format = [
  { cmd = "black ." },
  # Configure Ruff not to auto-fix (remove!):
  # unused imports (F401), unused variables (F841), `print` statements (T201), and commented-out code (ERA001).
  { cmd = "ruff check --fix --ignore=ERA --ignore=F401 --ignore=F841 --ignore=T20 --ignore=ERA001 ." },
  { cmd = "pyproject-fmt --keep-full-version pyproject.toml" },
]

lint = [
  { cmd = "ruff check ." },
  { cmd = "black --check ." },
  { cmd = "validate-pyproject pyproject.toml" },
  { cmd = "mypy" },
]

release = [
  { cmd = "python -m build" },
  { cmd = "twine upload dist/*" },
]

test = { cmd = "pytest" }
