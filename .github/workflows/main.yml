---
name: "Tests"

on:
  pull_request: ~
  push:
    branches: [ main ]

  # Allow job to be triggered manually.
  workflow_dispatch:

  # Run job each night after CrateDB nightly has been published.
  schedule:
    - cron: '0 3 * * *'

# Cancel in-progress jobs when pushing to the same branch.
concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:

  tests:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.8", "3.13"]

    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
      UV_SYSTEM_PYTHON: true

    # https://docs.github.com/en/actions/using-containerized-services/about-service-containers
    services:
      cratedb:
        image: crate/crate:nightly
        ports:
          - 4200:4200
          - 5432:5432
      postgres:
        image: postgres
        ports:
          - 5433:5432
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    name: "
    Python ${{ matrix.python-version }} on OS ${{ matrix.os }}
    "
    steps:

    - name: Acquire sources
      uses: actions/checkout@v4

    - name: Install Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        cache-dependency-glob: |
          pyproject.toml
        cache-suffix: ${{ matrix.python-version }}
        enable-cache: true
        version: "latest"

    - name: Install project
      run: |
        # Install package in editable mode.
        uv pip install --editable='.[test,develop]'

    - name: Run linter and software tests
      run: |
        poe check

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        files: ./coverage.xml
        flags: main
        env_vars: OS,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: true
